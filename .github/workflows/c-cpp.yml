name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest]
    
    runs-on: ${{ matrix.os }}

    env:
      CMAKE_PRESET: ${{ matrix.os == 'windows-latest' && 'ci_windows' || 'ci_linux' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build
      uses: ./actions/build
      with:
        cmake_preset: ${{ env.CMAKE_PRESET }}
        os_name: ${{ runner.os}}

    - name: CMake tests
      run: cmake --build --preset=${{ env.CMAKE_PRESET }} --target test
      
    - name: CMake install
      run: cmake --build --preset=${{ env.CMAKE_PRESET }} --target install
      
    - name: Upload artifacts
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v4
      with:
        name: vdownloader-windows-x64
        path: install/bin/vdownloader.exe
        
    - name: Upload artifacts
      if: ${{ runner.os == 'Linux' }}
      uses: actions/upload-artifact@v4
      with:
        name: vdownloader-linux-x64
        path: install/bin/vdownloader

  valgrind:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install valgrind
      run: apt-get install valgrind
      
    - name: Build
      uses: ./actions/build
      with:
        cmake_preset: ci_valgrind
        os_name: ${{ runner.os }}

    - name: Valgrind check
      run: cmake --build --preset=ci_valgrind --target valgrind_check